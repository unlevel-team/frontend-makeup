<?xml version="1.0" encoding="UTF-8"?>
<data>
  <topic name="animations">
    <title value="CSS animations" />
    <!-- <docLink value="https://www.w3schools.com/tags/tag_title.asp" /> -->
    <description>
      <![CDATA[
        The CSS animations
      ]]>
    </description>
    <concept name="css-animations">
      <title value="What are CSS Animations?" />
      <docLink value="https://www.w3schools.com/css/css3_animations.asp" />
      <description>
        <![CDATA[
          An animation lets an element gradually change from one style to another. <br/>
          You can change as many CSS properties you want, as many times you want. <br/>
          To use CSS animation, you must first specify some keyframes for the animation. <br/>
          Keyframes hold what styles the element will have at certain times. <br/>

          <strong>CSS animation properties</strong>
          <ul>
            <li>@keyframes</li>
            <li>animation-name</li>
            <li>animation-duration</li>
            <li>animation-delay</li>
            <li>animation-iteration-count</li>
            <li>animation-direction</li>
            <li>animation-timing-function</li>
            <li>animation-fill-mode</li>
            <li>animation</li>
          </ul>
        ]]>
      </description>
    </concept>
    <concept name="keyframes">
      <title value="The @keyframes Rule" />
      <docLink value="https://www.w3schools.com/css/css3_animations.asp" />
      <description>
        <![CDATA[
          When you specify CSS styles inside the <code>@keyframes</code> rule, the animation will gradually change from the current style to the new style at certain times. <br/>
          To get an animation to work, you must bind the animation to an element.
        ]]>
      </description>
      <code language="css">
        <![CDATA[
/* The animation code */
@keyframes example {
  from {background-color: red;}
  to {background-color: yellow;}
}

/* The element to apply the animation to */
div {
  width: 100px;
  height: 100px;
  background-color: red;
  animation-name: example;
  animation-duration: 4s;
}
        ]]>
      </code>
      <code language="css">
        <![CDATA[
/* The animation code */
@keyframes example {
  0%   {background-color: red;}
  25%  {background-color: yellow;}
  50%  {background-color: blue;}
  100% {background-color: green;}
}

/* The element to apply the animation to */
div {
  width: 100px;
  height: 100px;
  background-color: red;
  animation-name: example;
  animation-duration: 4s;
}
        ]]>
      </code>
    </concept>
    <concept name="delay">
      <title value="Delay an Animation" />
      <docLink value="https://www.w3schools.com/css/css3_animations.asp" />
      <description>
        <![CDATA[
          The <code>animation-delay</code> property specifies a delay for the start of an animation. <br/>
          Negative values are also allowed. If using negative values, the animation will start as if it had already been playing for N seconds.
        ]]>
      </description>
      <code language="css">
        <![CDATA[
div {
  width: 100px;
  height: 100px;
  position: relative;
  background-color: red;
  animation-name: example;
  animation-duration: 4s;
  animation-delay: 2s;
}

div.negative {
  width: 100px;
  height: 100px;
  position: relative;
  background-color: red;
  animation-name: example;
  animation-duration: 4s;
  animation-delay: -2s;
}
        ]]>
      </code>
    </concept>
    <concept name="iteration-count">
      <title value="Set How Many Times an Animation Should Run" />
      <docLink value="https://www.w3schools.com/css/css3_animations.asp" />
      <description>
        <![CDATA[
          The <code>animation-iteration-count</code> property specifies the number of times an animation should run. <br/>
          The value "infinite" makes the animation continue for ever.
        ]]>
      </description>
      <code language="css">
        <![CDATA[
div {
  width: 100px;
  height: 100px;
  position: relative;
  background-color: red;
  animation-name: example;
  animation-duration: 4s;
  animation-iteration-count: 3;
}

div.infinite {
  width: 100px;
  height: 100px;
  position: relative;
  background-color: red;
  animation-name: example;
  animation-duration: 4s;
  animation-iteration-count: infinite;
}
        ]]>
      </code>
    </concept>
    <concept name="reverse-direction-alternate-cycles">
      <title value="Run Animation in Reverse Direction or Alternate Cycles" />
      <docLink value="https://www.w3schools.com/css/css3_animations.asp" />
      <description>
        <![CDATA[
          The <code>animation-direction</code> property specifies whether an animation should be played forwards, backwards or in alternate cycles. <br/>
          The <code>animation-direction</code> property can have the following values:
          <ul>
            <li><strong>normal</strong> - The animation is played as normal (forwards). This is default</li>
            <li><strong>reverse</strong> - The animation is played in reverse direction (backwards)</li>
            <li><strong>alternate</strong> - The animation is played forwards first, then backwards</li>
            <li><strong>alternate-reverse</strong> - The animation is played backwards first, then forwards</li>
          </ul>
        ]]>
      </description>
      <code language="css">
        <![CDATA[
div {
  width: 100px;
  height: 100px;
  position: relative;
  background-color: red;
  animation-name: example;
  animation-duration: 4s;
  animation-iteration-count: 2;
  animation-direction: alternate-reverse;
}
        ]]>
      </code>
    </concept>
    <concept name="speed-curve">
      <title value="Specify the Speed Curve of the Animation" />
      <docLink value="https://www.w3schools.com/css/css3_animations.asp" />
      <description>
        <![CDATA[
          The <code>animation-timing-function</code> property specifies the speed curve of the animation. <br/>
          The <code>animation-timing-function</code> property can have the following values:
          <ul>
            <li><strong>ease</strong> - Specifies an animation with a slow start, then fast, then end slowly (this is default)</li>
            <li><strong>linear</strong> - Specifies an animation with the same speed from start to end</li>
            <li><strong>ease-in</strong> - Specifies an animation with a slow start</li>
            <li><strong>ease-out</strong> - Specifies an animation with a slow end</li>
            <li><strong>ease-in-out</strong> - Specifies an animation with a slow start and end</li>
            <li><strong>cubic-bezier(n,n,n,n)</strong> - Lets you define your own values in a cubic-bezier function</li>
          </ul>
        ]]>
      </description>
      <code language="css">
        <![CDATA[
#div1 {animation-timing-function: linear;}
#div2 {animation-timing-function: ease;}
#div3 {animation-timing-function: ease-in;}
#div4 {animation-timing-function: ease-out;}
#div5 {animation-timing-function: ease-in-out;}
        ]]>
      </code>
    </concept>
    <concept name="fill-mode">
      <title value="Specify the fill-mode For an Animation" />
      <docLink value="https://www.w3schools.com/css/css3_animations.asp" />
      <description>
        <![CDATA[
CSS animations do not affect an element before the first keyframe is played or after the last keyframe is played. The <code>animation-fill-mode</code> property can override this behavior. </br>
The <code>animation-fill-mode</code> property specifies a style for the target element when the animation is not playing (before it starts, after it ends, or both). <br/>
The <code>animation-fill-mode</code> property can have the following values:
<ul>
  <li><strong>none</strong> - Default value. Animation will not apply any styles to the element before or after it is executing</li>
  <li><strong>forwards</strong> - The element will retain the style values that is set by the last keyframe (depends on animation-direction and animation-iteration-count)</li>
  <li><strong>backwards</strong> - The element will get the style values that is set by the first keyframe (depends on animation-direction), and retain this during the animation-delay period</li>
  <li><strong>both</strong> - The animation will follow the rules for both forwards and backwards, extending the animation properties in both directions</li>
</ul>
        ]]>
      </description>
      <code language="css">
        <![CDATA[
div {
  width: 100px;
  height: 100px;
  background: red;
  position: relative;
  animation-name: example;
  animation-duration: 3s;
  animation-fill-mode: forwards;
}
        ]]>
      </code>
    </concept>
    <concept name="animation-shorthand">
      <title value="Animation Shorthand Property" />
      <docLink value="https://www.w3schools.com/css/css3_animations.asp" />
      <description>
        <![CDATA[
Is possible to define different animations properties using the shorthand <code>animation</code> property.
        ]]>
      </description>
      <code language="css">
        <![CDATA[
div {
  animation-name: example;
  animation-duration: 5s;
  animation-timing-function: linear;
  animation-delay: 2s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}

div.shorthand {
  animation: example 5s linear 2s infinite alternate;
}
        ]]>
      </code>
    </concept>
  </topic>
</data>